# .github/workflows/ci-pr-and-cd.yml
name: CI

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

permissions:
  contents: write          # Required for creating releases
  id-token: write          # for OIDC
  packages: write          # for GHCR
  pull-requests: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/todo-app
  NODE_VERSION: '18'

jobs:
  lint-and-test:
    name: 'Lint, Typecheck & Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Type-check
        run: npm run typecheck

      # - name: Run unit tests
      #   run: npm test

  build-and-scan:
    name: 'Build Assets & Scan Container'
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build production assets
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image (PR tag)
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}

      # - name: Scan image for vulnerabilities
      #   uses: aquasecurity/trivy-action@v0.9.2
      #   with:
      #     image-ref: ${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}
      #     format: table
      #     exit-code: '1'
      #     severity: CRITICAL,HIGH

  push-to-ghcr:
    name: 'Push to GitHub Container Registry'
    needs: build-and-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push multiâ€‘arch image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.sha }}
          name: Release ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
